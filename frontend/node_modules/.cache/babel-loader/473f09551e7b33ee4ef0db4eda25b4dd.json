{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\HP\\\\Downloads\\\\MovieGo-master\\\\MovieGo-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\MovieGo-master\\\\MovieGo-master\\\\frontend\\\\src\\\\components\\\\collection-preview\\\\collection-preview.component.jsx\";\nimport React from 'react';\nimport './collection-preview.styles.scss';\nimport CollectionItem from '../collection-item/collection-item.component';\n\nconst CollectionPreview = ({\n  collectionType,\n  collections\n}) => React.createElement(\"div\", {\n  className: \"collection-preview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, (() => {\n  let collectionsNowShowing = collections;\n  let collectionsPopular = [...collections].sort((a, b) => b.imdbRating - a.imdbRating);\n  collectionsNowShowing = collectionsNowShowing.filter((collection, idx) => collection.Year < 2013);\n  collectionsPopular = collectionsPopular.filter((collection, idx) => collection.Year < 2013);\n  let collectionsUpcoming = [...collections].filter((collection, idx) => collection.Year >= 2013);\n\n  if (collectionType === 'now-showing-indirect') {\n    return collectionsNowShowing.filter((collection, idx) => idx < 10).map((_ref) => {\n      let imdbID = _ref.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    });\n  } else if (collectionType === 'now-showing-direct') {\n    return collectionsNowShowing.filter((collection, idx) => idx < 40).map((_ref2) => {\n      let imdbID = _ref2.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref2, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    });\n  } else if (collectionType === 'upcoming-indirect') {\n    return collectionsUpcoming.filter((collection, idx) => idx < 10).map((_ref3) => {\n      let imdbID = _ref3.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref3, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        collectionType: collectionType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    });\n  } else if (collectionType === 'upcoming-direct') {\n    return collectionsUpcoming.filter((collection, idx) => idx < 40).map((_ref4) => {\n      let imdbID = _ref4.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref4, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        collectionType: collectionType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    });\n  } else if (collectionType === 'popular-indirect') {\n    return collectionsPopular.filter((collection, idx) => idx < 10).map((_ref5) => {\n      let imdbID = _ref5.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref5, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    });\n  } else {\n    return collectionsPopular.filter((collection, idx) => idx < 40).map((_ref6) => {\n      let imdbID = _ref6.imdbID,\n          otherCollectionProps = _objectWithoutProperties(_ref6, [\"imdbID\"]);\n\n      return React.createElement(CollectionItem, Object.assign({\n        key: imdbID,\n        imdbID: imdbID\n      }, otherCollectionProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    });\n  }\n})());\n\nexport default CollectionPreview;","map":{"version":3,"sources":["C:/Users/HP/Downloads/MovieGo-master/MovieGo-master/frontend/src/components/collection-preview/collection-preview.component.jsx"],"names":["React","CollectionItem","CollectionPreview","collectionType","collections","collectionsNowShowing","collectionsPopular","sort","a","b","imdbRating","filter","collection","idx","Year","collectionsUpcoming","map","imdbID","otherCollectionProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './collection-preview.styles.scss';\nimport CollectionItem from '../collection-item/collection-item.component';\n\nconst CollectionPreview = ({collectionType, collections}) => (\n    <div className='collection-preview'>\n        {\n            (() => {\n                let collectionsNowShowing = collections;\n                let collectionsPopular = [...collections].sort((a, b) => (b.imdbRating-a.imdbRating));\n                collectionsNowShowing = collectionsNowShowing.filter((collection, idx) => collection.Year<2013);\n                collectionsPopular = collectionsPopular.filter((collection, idx) => collection.Year<2013);\n                let collectionsUpcoming = [...collections].filter((collection, idx) => collection.Year >= 2013);\n\n                if(collectionType==='now-showing-indirect'){\n                    return(collectionsNowShowing.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else if(collectionType==='now-showing-direct'){\n                    return(collectionsNowShowing.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else if(collectionType==='upcoming-indirect'){\n                    return(collectionsUpcoming.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} collectionType={collectionType} />\n                    ))\n                }\n\n                else if(collectionType==='upcoming-direct'){\n                    return(collectionsUpcoming.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} collectionType={collectionType} />\n                    ))\n                }\n\n                else if(collectionType==='popular-indirect'){\n                    return(collectionsPopular.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else{\n                    return(collectionsPopular.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n            })()\n        }\n    </div>\n)\n\nexport default CollectionPreview;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\MovieGo-master\\\\MovieGo-master\\\\frontend\\\\src\\\\components\\\\collection-preview\\\\collection-preview.component.jsx\";\nimport React from 'react';\nimport './collection-preview.styles.scss';\nimport CollectionItem from '../collection-item/collection-item.component';\nconst CollectionPreview = _ref => {\n  let {\n    collectionType,\n    collections\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, (() => {\n    let collectionsNowShowing = collections;\n    let collectionsPopular = [...collections].sort((a, b) => b.imdbRating - a.imdbRating);\n    collectionsNowShowing = collectionsNowShowing.filter((collection, idx) => collection.Year < 2013);\n    collectionsPopular = collectionsPopular.filter((collection, idx) => collection.Year < 2013);\n    let collectionsUpcoming = [...collections].filter((collection, idx) => collection.Year >= 2013);\n    if (collectionType === 'now-showing-indirect') {\n      return collectionsNowShowing.filter((collection, idx) => idx < 10).map(_ref2 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref2;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }\n        }));\n      });\n    } else if (collectionType === 'now-showing-direct') {\n      return collectionsNowShowing.filter((collection, idx) => idx < 40).map(_ref3 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref3;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }\n        }));\n      });\n    } else if (collectionType === 'upcoming-indirect') {\n      return collectionsUpcoming.filter((collection, idx) => idx < 10).map(_ref4 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref4;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          collectionType: collectionType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }));\n      });\n    } else if (collectionType === 'upcoming-direct') {\n      return collectionsUpcoming.filter((collection, idx) => idx < 40).map(_ref5 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref5;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          collectionType: collectionType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }));\n      });\n    } else if (collectionType === 'popular-indirect') {\n      return collectionsPopular.filter((collection, idx) => idx < 10).map(_ref6 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref6;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        }));\n      });\n    } else {\n      return collectionsPopular.filter((collection, idx) => idx < 40).map(_ref7 => {\n        let {\n          imdbID,\n          ...otherCollectionProps\n        } = _ref7;\n        return /*#__PURE__*/React.createElement(CollectionItem, Object.assign({\n          key: imdbID,\n          imdbID: imdbID\n        }, otherCollectionProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }));\n      });\n    }\n  })());\n};\n_c = CollectionPreview;\nexport default CollectionPreview;\nvar _c;\n$RefreshReg$(_c, \"CollectionPreview\");","map":{"version":3,"names":["React","CollectionItem","CollectionPreview","collectionType","collections","collectionsNowShowing","collectionsPopular","sort","a","b","imdbRating","filter","collection","idx","Year","collectionsUpcoming","map","imdbID","otherCollectionProps"],"sources":["C:/Users/HP/Downloads/MovieGo-master/MovieGo-master/frontend/src/components/collection-preview/collection-preview.component.jsx"],"sourcesContent":["import React from 'react';\n\nimport './collection-preview.styles.scss';\nimport CollectionItem from '../collection-item/collection-item.component';\n\nconst CollectionPreview = ({collectionType, collections}) => (\n    <div className='collection-preview'>\n        {\n            (() => {\n                let collectionsNowShowing = collections;\n                let collectionsPopular = [...collections].sort((a, b) => (b.imdbRating-a.imdbRating));\n                collectionsNowShowing = collectionsNowShowing.filter((collection, idx) => collection.Year<2013);\n                collectionsPopular = collectionsPopular.filter((collection, idx) => collection.Year<2013);\n                let collectionsUpcoming = [...collections].filter((collection, idx) => collection.Year >= 2013);\n\n                if(collectionType==='now-showing-indirect'){\n                    return(collectionsNowShowing.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else if(collectionType==='now-showing-direct'){\n                    return(collectionsNowShowing.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else if(collectionType==='upcoming-indirect'){\n                    return(collectionsUpcoming.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} collectionType={collectionType} />\n                    ))\n                }\n\n                else if(collectionType==='upcoming-direct'){\n                    return(collectionsUpcoming.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} collectionType={collectionType} />\n                    ))\n                }\n\n                else if(collectionType==='popular-indirect'){\n                    return(collectionsPopular.filter((collection, idx) => idx<10).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n\n                else{\n                    return(collectionsPopular.filter((collection, idx) => idx<40).\n                    map(({ imdbID, ...otherCollectionProps }) => \n                        <CollectionItem key={imdbID} imdbID={imdbID} {...otherCollectionProps} />\n                    ))\n                }\n            })()\n        }\n    </div>\n)\n\nexport default CollectionPreview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}